import java.util.*;
import java.io.*;
public class Main
{
    static int[] temp;
    static int cnt = 0;
    static int val = -1;
    static int K;
    public static void merge_sort(int[] arr, int left, int right){
        if (cnt > K) return;
        int mid = 0;
        if (left < right){
            mid = (left + right)/2;
            merge_sort(arr, left, mid);
            merge_sort(arr, mid+1, right);
            merge(arr, left, mid, right);
        }
    }
    
    public static void merge(int[] arr, int left, int mid, int right){
        int l = left;
        int r = mid+1;
        int idx = left;
        
        while(l <= mid && r <= right){
            if (arr[l] <= arr[r]) temp[idx++] = arr[l++];
            else temp[idx++] = arr[r++];
        }
        
        if (l > mid){
            while(r <= right)
                temp[idx++] = arr[r++];
        } else{
            while(l <= mid)
                temp[idx++] = arr[l++];
        }
        
        for (int i = left; i <= right; i++){
            cnt++;
            if (cnt == K) {
                val = temp[i];
                break;
            }
            arr[i] = temp[i];
        }
    }
    
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		int[] arr = new int[n];
		
		st = new StringTokenizer(br.readLine());
		for (int i = 0; i < n; i++)
		    arr[i] = Integer.parseInt(st.nextToken());
        
		temp = new int[n];
		merge_sort(arr, 0, n-1);
		    
		System.out.println(val);
		
		br.close();
	}
}