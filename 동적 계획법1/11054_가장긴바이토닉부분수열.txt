import java.util.*;
import java.io.*;
public class Main
{
    static int[] arr;
    static int[] lis_dp;
    static int[] lds_dp;
    
    public static void lis(){
        for (int i = 0; i < arr.length; i++){
            lis_dp[i] = 1;
            for (int j = 0; j < i; j++)
                if (arr[j] < arr[i]) lis_dp[i] = Math.max(lis_dp[i], lis_dp[j]+1);
        }
    }
    
    public static void lds(){
        for (int i = arr.length-1; i >= 0; i--){
            lds_dp[i] = 1;
            for (int j = arr.length-1; j > i; j--)
                if (arr[j] < arr[i]) lds_dp[i] = Math.max(lds_dp[i], lds_dp[j]+1);
        }
    }
    
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());
		arr = new int[n];
		lis_dp = new int[n];
		lds_dp = new int[n];
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		for (int i = 0; i < n; i++)
		    arr[i] = Integer.parseInt(st.nextToken());
		
		lis();
		lds();
		
		int max = 0;
		for (int i = 0; i < n; i++)
		    max = Math.max(lis_dp[i]+lds_dp[i], max);
		
		System.out.println(max-1);
		
		br.close();
	}
}
