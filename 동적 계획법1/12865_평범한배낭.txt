import java.util.*;
import java.io.*;
public class Main
{
    
    static int[][] dp;
    static int[] weight;
    static int[] value;
    public static void knapsack(int n, int k){
        int max = 0;
        for (int i = 1; i <= n; i++){
            for (int j = 1; j <= k; j++){
                if (weight[i] > j) dp[i][j] = dp[i-1][j];
                else dp[i][j] = Math.max(dp[i-1][j], dp[i-1][j - weight[i]] + value[i]);
            }
        }
    }
    
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int k = Integer.parseInt(st.nextToken());
		dp = new int[n+1][k+1];
		weight = new int[n+1];
		value = new int[n+1];
		
		for (int i = 1; i <= n; i++){
		    st = new StringTokenizer(br.readLine());
		    weight[i] = Integer.parseInt(st.nextToken());
		    value[i] = Integer.parseInt(st.nextToken());
		}
		
		knapsack(n, k);
		System.out.println(dp[n][k]);
		
		br.close();
	}
}
